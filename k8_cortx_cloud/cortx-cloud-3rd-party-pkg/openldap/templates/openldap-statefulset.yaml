apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openldap
  labels:
    name: openldap-connect
spec:
  serviceName: {{ .Values.openldap.servicename }}
  replicas: {{ .Values.openldap.numreplicas }}
  selector:
    matchLabels:
      name: openldap-connect
  template:
    metadata:
      labels:
        name: openldap-connect
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
                matchLabels:
                  name: openldap-connect
      containers:
        - name: openldap
          image: ghcr.io/seagate/symas-openldap:latest
          imagePullPolicy: "Never"
          volumeMounts:
            - name: etc-cortx
              mountPath: /etc/cortx
            - name: var-data-cortx
              mountPath: /var/data/cortx
            - name: var-log-cortx
              mountPath: /var/log/cortx
          ports:
            - name: ldapport
              containerPort: 389
          command:
            - "/opt/entrypoint.sh"
          args:
            - "--rootdnpassword"
            - "seagate"
  volumeClaimTemplates:
  - metadata:
      name: etc-cortx
    spec:
      storageClassName: {{ .Values.openldap.storageclass }}
      accessModes:
      - ReadWriteMany
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ $.Values.openldap.storagesize }}
  - metadata:
      name: var-data-cortx
    spec:
      accessModes:
      - ReadWriteMany
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ $.Values.openldap.storagesize }}
  - metadata:
      name: var-log-cortx
    spec:
      accessModes:
      - ReadWriteMany
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ $.Values.openldap.storagesize }}
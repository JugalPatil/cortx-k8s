apiVersion: v1
kind: Pod
metadata:
  labels:
    app: {{ .Values.cortxdataprov.name }}
  name: {{ .Values.cortxdataprov.name }}
  namespace: {{ .Values.namespace }}
spec:
  hostname: {{ .Values.cortxdataprov.service.headless.name }}
  serviceAccountName: {{ .Values.cortxdataprov.serviceaccountname }}
  volumes:
    - name: {{ .Values.cortxdataprov.cfgmap.volmountname }}
      configMap:
        name: {{ .Values.cortxdataprov.cfgmap.name }}
    - name: {{ .Values.cortxdataprov.sslcfgmap.volmountname }}
      configMap:
        name: {{ .Values.cortxdataprov.sslcfgmap.name }}
    - name: {{ .Values.cortxdataprov.machineid.volmountname }}
      configMap:
        name: {{ .Values.cortxdataprov.machineid.name }}
    {{- $nodeselector := (.Values.cortxdataprov.nodeselector) }}
    {{- $nodeparts := split "." $nodeselector }}
    {{- $nodename := $nodeparts._0 }}
    # Loop through the node list info file which contains the following example:
    # 0 node-1
    # 1 node-2
    {{- range $line := .Files.Lines .Values.cortxdataprov.nodelistinfo }}
    {{- $parts := split " " . }}
    {{- $index := $parts._0 }}
    {{- $parsednodename := $parts._1 }}
    # Loop through the mounted block info file which contains the following:
    # /dev/sdc 5Gi
    # /dev/sdd 5Gi
    {{- range $mntblkinfoline := $.Files.Lines $.Values.cortxdataprov.mountblkinfo }}
    {{- $mntblkparts := split " " . }}
    {{- $localpath := $mntblkparts._0 }}
    {{- $mountblksize := $mntblkparts._1 }}
    {{- $disk := (base $localpath) }}
    {{- if eq $parsednodename $nodename }}
    - name: {{ printf "cortx-data-%s-pv-%s" $disk $index }}
      persistentVolumeClaim:
        claimName: {{ printf "cortx-data-%s-pvc-%s" $disk $index }}
    {{- end }}
    {{- end }}
    {{- end }}
    - name: local-path-pv
      persistentVolumeClaim:
        claimName: {{ .Values.cortxdataprov.localpathpvc.name }}
    {{- range .Files.Lines .Values.cortxdataprov.secretinfo }}
    - name: {{ printf "%s" . }}
      secret:
        secretName: {{ printf "%s" . }}
    {{- end }}
  containers:
  - name: cortx-setup
    image: {{ .Values.cortxdataprov.image }}
    imagePullPolicy: IfNotPresent        
    command: 
      - /bin/sh
    {{- if eq .Values.cortxdataprov.image  "ghcr.io/seagate/centos:7" }}
    args: 
      - -c
      - sleep $(shuf -i 5-10 -n 1)s
    {{- else }}
    args: 
      - -c
      - /opt/seagate/cortx/provisioner/bin/cortx_deploy -f /etc/cortx/solution -c yaml:///etc/cortx/cluster.conf ;
    {{- end }}
    volumeDevices:
      # Loop through the node list info file which contains the following example:
      # 0 node-1
      # 1 node-2
      {{- range $line := .Files.Lines .Values.cortxdataprov.nodelistinfo }}
      {{- $parts := split " " . }}
      {{- $index := $parts._0 }}
      {{- $parsednodename := $parts._1 }}
      # Loop through the mounted block info file which contains the following:
      # /dev/sdc 5Gi
      # /dev/sdd 5Gi
      {{- range $mntblkinfoline := $.Files.Lines $.Values.cortxdataprov.mountblkinfo }}
      {{- $mntblkparts := split " " . }}
      {{- $localpath := $mntblkparts._0 }}
      {{- $mountblksize := $mntblkparts._1 }}
      {{- $disk := (base $localpath) }}
      {{- if eq $parsednodename $nodename }}
      - name: {{ printf "cortx-data-%s-pv-%s" $disk $index }}
        devicePath: {{ $localpath }}
      {{- end }}
      {{- end }}
      {{- end }}
    volumeMounts:
      - name: {{ .Values.cortxdataprov.cfgmap.volmountname }}
        mountPath: {{ .Values.cortxdataprov.cfgmap.mountpath }}
      - name: {{ .Values.cortxdataprov.sslcfgmap.volmountname }}
        mountPath: {{ .Values.cortxdataprov.sslcfgmap.mountpath }}
      - name: {{ .Values.cortxdataprov.machineid.volmountname }}
        mountPath: {{ .Values.cortxdataprov.machineid.mountpath }}
      - name: local-path-pv
        mountPath: {{ .Values.cortxdataprov.localpathpvc.mountpath }}
      {{- range .Files.Lines .Values.cortxdataprov.secretinfo }}
      - name: {{ printf "%s" . }}
        mountPath: /etc/cortx/solution/secret
        readOnly: true
      {{- end }}
    ports:
    - containerPort: 5050
  restartPolicy: Never
  nodeSelector:
    kubernetes.io/hostname: {{ .Values.cortxdataprov.nodeselector }}